buildscript {
    repositories {
        google()
        jcenter()
    }

    dependencies {
        classpath("com.android.tools.build:gradle:3.1.4")
    }
}

apply(plugin: "com.android.library")
apply(plugin: "maven")

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

android {
    buildToolsVersion safeExtGet("buildToolsVersion", "27.0.3")
    compileSdkVersion safeExtGet("compileSdkVersion", 26)

    defaultConfig {
        minSdkVersion safeExtGet("minSdkVersion", 16)
        targetSdkVersion safeExtGet("targetSdkVersion", 26)
        versionCode(4)
        versionName("2.19.1")
        consumerProguardFiles("proguard-rules.pro")
    }
    lintOptions {
        abortOnError true
        warningsAsErrors true
        baseline file("lint-baseline.xml")
    }
}

repositories {
    google()
    jcenter()
}

dependencies {
    implementation("com.bugsnag:bugsnag-android:4.14.2")
    implementation("com.facebook.react:react-native:+")
}

def configureReactNativePom(def pom) {
    def packageJson = new groovy.json.JsonSlurper().parseText(file("../package.json").text)

    pom.project {
        name("Bugsnag React Native")
        artifactId(packageJson.name)
        version(packageJson.version)
        groupId("com.bugsnag")
        description("Error monitoring and reporting for native exceptions and JS errors in React Native apps")
        url("https://github.com/bugsnag/bugsnag-react-native")

        licenses {
            license {
                name(packageJson.license)
                url("https://github.com/bugsnag/bugsnag-react-native/blob/master/LICENSE.txt")
                distribution("repo")
            }
        }

        organization {
            name("Bugsnag, Inc.")
        }
    }
}

afterEvaluate { project ->

    task androidJavadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += files(android.bootClasspath)
        classpath += files(project.getConfigurations().getByName('compile').asList())
        include "**/*.java"
    }

    task androidJavadocJar(type: Jar, dependsOn: androidJavadoc) {
        classifier = "javadoc"
        from androidJavadoc.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        classifier = "sources"
        from android.sourceSets.main.java.srcDirs
        include "**/*.java"
    }

    android.libraryVariants.all { variant ->
        def name = variant.name.capitalize()
        task "jar${name}"(type: Jar, dependsOn: variant.javaCompile) {
            from variant.javaCompile.destinationDir
        }
    }

    artifacts {
        archives androidSourcesJar
        archives androidJavadocJar
    }

    task installArchives(type: Upload) {
        configuration = configurations.archives
        repositories.mavenDeployer {
            // Deploy to bugsnag-react-native/maven, ready to publish to npm
            repository url: "file://${projectDir}/../android/maven"

            configureReactNativePom pom
        }
    }
}
